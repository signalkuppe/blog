---
import { Image } from "astro:assets";
import home1 from "../images/signalkuppe-1.png";
import home2 from "../images/signalkuppe-2.png";
import home3 from "../images/signalkuppe-3.png";
import home4 from "../images/signalkuppe-4.png";
import Layout from "../layouts/Layout.astro";
const images = [
  {
    src: home1,
    alt: "Matteo in una notte in tenda alla Svalbard",
  },
  {
    src: home2,
    alt: "Matteo mentre fa trail running in Grigna",
  },
  {
    src: home3,
    alt: "Matteo sulla vetta del Piz Griatschouls",
  },
  {
    src: home4,
    alt: "Matteo in arrampicata sulla Rocca Castello",
  },
];
---

<Layout
  title="Signalkuppe - Parole oltre i 4000m"
  description="Blog personale di Matteo Leoni"
  ogImage="/og-image.png"
>
  <h1>Piacere Matteo <span aria-hidden="true">ðŸ‘‹</span></h1>
  <p class="lead">
    Sono un appassionato di montagna. Questo sito vuole essere un <a
      href="/blog">diario di tutte le mie uscite,</a
    > spero possa esservi utile per scoprire nuovi itinerari. Vivo a Concenedo, dove
    ho posizionato una stazione meteo, in
    <a
      href="/meteo-concenedo"
      aria-description="Dati meteo in diretta da Concenedo">questa pagina</a
    > trovate i dati in diretta.
  </p>
  <p class="lead-button-wrapper">
    <a href="/matteo" class="btn">Qualcosa in piÃ¹ su di me</a>
  </p>
  <aside class="hide-scrollbars images" aria-labelledby="carousel-heading">
    <h2 id="carousel-heading" class="visually-hidden">Alcune mie foto</h2>
    <ul class="hide-scrollbars images-list" role="list" id="js-images">
      {
        images.map((image, i) => (
          <li>
            <Image
              src={image.src}
              alt={image.alt}
              width="350"
              height="567"
              loading={i === 0 ? "eager" : "lazy"}
            />
          </li>
        ))
      }
    </ul>
  </aside>
</Layout>

<style>
  .lead {
    text-wrap: pretty;
    max-width: 65ch;
  }

  .images-list {
    list-style: none;
    margin: 0;
    padding: 0;
    overflow-x: auto;
    white-space: nowrap;
    display: flex;
    flex-wrap: nowrap;
    gap: 1.5rem;
    margin-top: 5rem;
    scroll-snap-type: x mandatory;
    -webkit-overflow-scrolling: touch;
  }

  .images-list li {
    flex-shrink: 0;
    max-width: 75vw;
  }

  .images-list img {
    height: 100%;
    display: block;
    scroll-snap-align: start;
    background: var(--contrastBackground);
    aspect-ratio: 350/567;
  }

  .lead-button-wrapper {
    margin-top: 3rem;
  }

  :global(.scroll-hint) {
    margin-top: 1rem;
    font-size: 0.75rem;
    display: flex;
    gap: 0.25rem;
  }

  :global(.scroll-hint svg) {
    width: 1rem;
    height: 1rem;
  }

  @keyframes handAnimation {
    0% {
      transform: rotate(0deg);
    }
    10% {
      transform: rotate(14deg);
    }
    20% {
      transform: rotate(-8deg);
    }
    30% {
      transform: rotate(14deg);
    }
    40% {
      transform: rotate(-4deg);
    }
    50% {
      transform: rotate(10deg);
    }
    60% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(0deg);
    }
  }

  @media (prefers-reduced-motion: no-preference) {
    h1 span {
      display: inline-block;
      animation-name: handAnimation;
      animation-duration: 1.2s;
      animation-delay: 1s;
      transform-origin: 70% 70%;
    }
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const imageslist = document.getElementById("js-images");
    const hint = document.createElement("p");
    const arrowSvg = `<svg 
                        viewBox="0 0 24 24" 
                        stroke="currentColor" 
                        stroke-width="2" 
                        fill="none" 
                        stroke-linecap="round" 
                        stroke-linejoin="round"
                        aria-hidden="true">
                        <polyline points="10 9 15 4 20 9"></polyline>
                        <path d="M4 20h7a4 4 0 0 0 4-4V4"></path>
                      </svg>`;
    hint.innerHTML = `Scorri per altre foto ${arrowSvg}`;
    hint.setAttribute("class", "scroll-hint");
    hint.setAttribute("aria-hidden", "true");
    function checkOverflow() {
      const canscroll = imageslist.clientWidth < imageslist.scrollWidth;

      if (canscroll) {
        imageslist.parentNode.append(hint);
      } else {
        if (document.querySelector(".scroll-hint")) {
          imageslist.parentNode.removeChild(hint);
        }
      }
    }

    const resizeObserver = new ResizeObserver((entries) => {
      checkOverflow();
    });

    checkOverflow();
    resizeObserver.observe(imageslist);
  });
</script>
