---
const props = Astro.props;
---

<form id="js-theme-picker" {...props}>
  <fieldset>
    <legend>Tema</legend>
    <div class="radios">
      <label>
        <input name="theme" type="radio" value="auto" checked />
        <span>Automatico</span>
      </label>
      <label>
        <input name="theme" type="radio" value="light" />
        <span>Chiaro</span>
      </label>
      <label>
        <input name="theme" type="radio" value="dark" />
        <span>Scuro</span>
      </label>
    </div>
  </fieldset>
  <script is:inline slot="head">
    const THEME_STORAGE_KEY = "theme";
    const THEME_OWNER = document.documentElement;
    let cachedTheme;

    function setTheme(theme) {
      if (theme === "auto") {
        delete THEME_OWNER.dataset[THEME_STORAGE_KEY];
      } else {
        THEME_OWNER.dataset[THEME_STORAGE_KEY] = theme;
      }
    }

    function loadTheme() {
      // Immediately set theme from localStorage
      cachedTheme = localStorage.getItem(THEME_STORAGE_KEY);
      setTheme(cachedTheme || "auto");
    }

    loadTheme();

    document.addEventListener("DOMContentLoaded", () => {
      const themePicker = document.getElementById("js-theme-picker");
      if (!themePicker) return;

      const initialTheme = cachedTheme ?? "auto";
      themePicker.querySelector("input[checked]").removeAttribute("checked");
      themePicker
        .querySelector(`input[value="${initialTheme}"]`)
        .setAttribute("checked", "");

      themePicker.addEventListener("change", (e) => {
        const theme = e.target.value;
        setTheme(theme);
        if (theme === "auto") {
          localStorage.removeItem(THEME_STORAGE_KEY);
        } else {
          localStorage.setItem(THEME_STORAGE_KEY, theme);
        }
      });
    });
  </script>
  <noscript>
    <style>
      #js-theme-picker {
        display: none;
      }
    </style>
  </noscript>
</form>

<style>
  fieldset {
    border: none;
    padding: 0;
  }

  legend {
    font-weight: bold;
    margin-bottom: 0.5rem;
  }
  .radios {
    display: flex;
    gap: 1rem;
  }
</style>
