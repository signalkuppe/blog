{# 
# Social media meta tags
# @param {string} title  - The page title
# @param {string} description  - The page description
# @param {string} image  - The page cloudinary image id
# @param {string} twitterCard  - The type of twitter card (default = summary)
# @param {string} ogType - The open graph type (default = article)
#}

{% macro socialMeta(title, description, image, twitterCard='summary', ogType='article') %}
<meta name="description" content="{{ description }}">
<meta name="twitter:card" content="{{ twitterCard }}" />
<meta name="twitter:site" content="{% info 'twitter' %}" />
<meta name="twitter:creator" content="{% info 'twitter' %}" />
<meta property="og:site_name" content="{% info 'name' %}" />
<meta name="twitter:title" content="{{ title }} "/>
<meta property="og:title" content="{{ title }}" />
<meta property="og:type" content="{{ ogType }}" />
<meta property="og:image" content="{{ cloudinaryImageUrl(image, 'w_200,h_200,c_fill,f_auto,q_auto,g_center') }}" />
<meta property="og:description" content="{{ description }}" />
{% endmacro %}


{# 
# favicons
#}

{% macro favicons() %}
<link rel="apple-touch-icon" sizes="180x180" href="/favicons/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="/favicons/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/favicons/favicon-16x16.png">
<link rel="manifest" href="/favicons/manifest.json">
<link rel="mask-icon" href="/favicons/safari-pinned-tab.svg" color="#000000">
<meta name="theme-color" content="#ffffff">
{% endmacro %}

{# 
# Common meta tags
#}

{% macro commonMeta () %}
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="apple-mobile-web-app-capable" content="yes">
{% endmacro %}

{# 
# Canonical meta tags
# @param {string} url - The page ulr
#}

{% macro canonical(pageUrl) %}
<link rel="canonical" href="{% info 'baseUrl' %}{{ pageUrl }}">
{% endmacro %}


{# 
# Meta title
# @param {string} title - The title
# @param {string} slogan - The slogan adter the pipe
#}

{% macro metaTitle(title, slogan) %}
<title>{{ title }} | {{ slogan }}</title>
{% endmacro %}

{# 
# Document type
#}

{% macro docType() %}
<!doctype html>
{% endmacro %}

{# 
# html tag
#}
{% macro htmlTag() %}<html lang="it">{% endmacro %}

{# 
# Site css file
#}

{% macro css() %}
<link href="/css/index.css" rel="stylesheet">
{% endmacro %}

{# 
# Site menu
#}

{% macro menu() %}
<nav id="menuContainer" class="sticky w-screen h-nav leading-nav landscape:ratio-2-3-remaining landscape:float-right pin-t z-50 p-2">
  <a class="landscape:gutter-left inline-block no-underline text-black" href="/" title="Torna alla pagina iniziale">
    <h1 class="text-lg uppercase">Signalkuppe</h1>
  </a>
  <button id="menuButton" class="float-right mt-3 mr-4 text-lg" aria-haspopup="true" aria-expanded="false" aria-controls="menu" aria-label="Menu di navigazione">
    <span class="sr-only">Menu di navigazione</span>
    {% include 'icons/menu.njk' %}
  </button>
  <ul id="menu">
    <li><a href="/" title="Torna alla pagina iniziale">Homepage</a></li>
    <li><a href="/blog" title="Elenco completo dei post">Blog</a></li>
    <li><a href="/foto" title="Il mio portfolio fotografico">Foto</a></li>
    <li><a href="/info" title="Informazioni sullâ€™autore">Info</a></li>
  </ul>
</nav>
<script>
  var button = document.querySelector('#menuButton')
  var menuContainer = document.querySelector('#menuContainer')
  var menu = document.querySelector('#menu')
  menu.classList.add('hidden')
  var options = {
    rootMargin: '0px',
    threshold: 1.0
  }
  var callback = function (entries, observer) {
    entries.forEach((entry) => {
      console.log(entry)
    });
  }
  var observer = new IntersectionObserver(callback, options);
  var target = document.querySelector('#post-title')
  observer.observe(target);
</script>
{% endmacro %}

{# 
# Cloudinary image url
# @param {string} id  - The image id
# @param {string} transformation - The transformation to apply
# @param {string} version - The image version (to bypass cloudinary's cdn cache)
#}

{% macro cloudinaryImageUrl(id, transformation, version) %}https://res.cloudinary.com/{% info 'cloudinaryCloudName' %}/image/upload/{{ transformation }}{% if version %}/{{ version }}{% endif %}/{{ id }}{% endmacro %}

{# 
# Post cover image
# @param {String} postCoverId  - the cloudinary image id
# @param {String} version  - the cloudinary image version
# @param {String} crop - optional: the image crop
#}

{% macro postCover(postCoverId, version, crop) %}
{% set baseTransformation %}w_1280,h_1920,c_crop,f_auto,q_auto{% endset %}
{% set transformation = baseTransformation %}
{% if crop %}
{% set transformation %}{{ baseTransformation }},{{ crop }}{% endset %}
{% endif %}
{{ cloudinaryImageUrl(postCoverId, transformation, version) }}
{% endmacro %}
